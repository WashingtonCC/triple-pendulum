theta1ddt:
-(R2*m2*math.sin(theta1 - theta2)*theta2dt**2 + R2*m2*math.cos(theta1 - theta2)*theta2ddt) + R2*m3*math.sin(theta1 - theta2)*theta2dt**2 + R2*m3*math.cos(theta1 - theta2)*theta2ddt) + R3*m3*math.sin(theta1 - theta3)*theta3dt**2 + R3*m3*math.cos(theta1 - theta3)*theta3ddt) + g*m_1*math.sin(theta1) + g*m2*math.sin(theta1) + g*m3*math.sin(theta1))/(R1*(m_1 + m2 + m3))

theta2ddt:
(R1*m2*math.sin(theta1 - theta2)*theta1dt**2 - R1*m2*math.cos(theta1 - theta2)*theta1ddt) + R1*m3*math.sin(theta1 - theta2)*theta1dt**2 - R1*m3*math.cos(theta1 - theta2)*theta1ddt) - R3*m3*math.sin(theta2 - theta3)*theta3dt**2 - R3*m3*math.cos(theta2 - theta3)*theta3ddt) - g*m2*math.sin(theta2) - g*m3*math.sin(theta2))/(R2*(m2 + m3))

theta3ddt:
(R1*math.sin(theta1 - theta3)*theta1dt**2 - R1*math.cos(theta1 - theta3)*theta1ddt) + R2*math.sin(theta2 - theta3)*theta2dt**2 - R2*math.cos(theta2 - theta3)*theta2ddt) - g*math.sin(theta3))/R3
